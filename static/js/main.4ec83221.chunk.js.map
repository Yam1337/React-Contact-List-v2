{"version":3,"sources":["components/header/styles.js","components/header/index.js","components/searchBar/styles.js","components/searchBar/index.js","styles/colors.js","components/contactList/styles.js","assets/icons/profile.svg","components/avatar/styles.js","components/avatar/index.js","components/contact/styles.js","assets/icons/phone.svg","components/contact/index.js","components/loader/index.js","components/contactList/index.js","components/contactList/utils/toggleSelectedId.js","pages/contactsPage/utils/fetchUsers.js","pages/contactsPage/utils/sortContactsByName.js","pages/contactsPage/index.js","pages/contactsPage/utils/isContactSearchMatch.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderWrapper","styled","div","Header","props","children","SearchInput","input","SearchBar","setInputValue","inputValue","placeholder","value","onChange","e","target","secondary2","ContactListWrapper","LoaderWrapper","AvatarWrapper","Avatar","src","AvatarPlaceholder","alt","ContactWrapper","CheckBox","ContactDetails","CheckBoxWrapper","DetailsWrapper","PhoneWrapper","Contact","id","name","phone","isChecked","onClick","PhoneIcon","type","checked","readOnly","Loader","color","loading","ContactList","activeContacts","setActiveContacts","contacts","undefined","newActiveContacts","arr","result","includes","splice","indexOf","push","toggleSelectedId","console","log","map","item","array","fetchUsers","a","fetch","response","json","users","sortContactsByName","sort","b","ContactsPage","useState","setContacts","filteredContacts","setFilteredContacts","useEffect","sortedUsers","getData","filter","contact","searchText","toLowerCase","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ec83221.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: rgb(131, 58, 180);\r\n  background: linear-gradient(\r\n    147deg,\r\n    rgba(131, 58, 180, 1) 0%,\r\n    rgba(253, 29, 29, 1) 50%,\r\n    rgba(252, 176, 69, 1) 100%\r\n  );\r\n  color: #ffffff;\r\n  font-size: 32px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  padding: 5px 25px 15px 25px;\r\n  min-width: 400px;\r\n`;\r\n","import { HeaderWrapper } from \"./styles\";\r\n\r\nexport const Header = (props) => {\r\n  return <HeaderWrapper>{props.children}</HeaderWrapper>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchInput = styled.input`\r\n  font-size: 24px;\r\n  width: 100%;\r\n  border: none;\r\n  padding: 8px 14px 8px 14px;\r\n  border-radius: 12px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n`;\r\n","import { SearchInput } from \"./styles\";\r\n\r\nexport const SearchBar = ({ setInputValue, inputValue }) => {\r\n  return (\r\n    <SearchInput\r\n      placeholder=\"Search contacts...\"\r\n      value={inputValue}\r\n      onChange={(e) => {\r\n        setInputValue(e.target.value);\r\n      }}\r\n    ></SearchInput>\r\n  );\r\n};\r\n","export const secondary = \"hsl(35, 100%, 90%)\";\r\nexport const secondary1 = \"hsl(35, 100%, 60%)\";\r\nexport const secondary2 = \"hsl(35, 100%, 98%)\";\r\nexport const secondary3 = \"hsl(35, 100%, 30%)\";\r\nexport const secondary4 = \"hsl(35, 100%, 10%)\";\r\n","import styled from \"styled-components\";\r\nimport { secondary2 } from \"../../styles/colors\";\r\n\r\nexport const ContactListWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: ${secondary2};\r\n  min-height: calc(100vh - 148px);\r\n  min-width: 400px;\r\n  padding: 15px 25px 15px 25px;\r\n`;\r\nexport const LoaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n  min-height: calc(100vh - 148px);\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/profile.0f04d492.svg\";","import styled from \"styled-components\";\r\nimport { secondary2 } from \"../../styles/colors\";\r\n\r\nexport const AvatarWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  background-color: ${secondary2};\r\n  min-width: 80px;\r\n  width: 80px;\r\n  min-height: 80px;\r\n  height: 80px;\r\n\r\n  & > img {\r\n    display: flex;\r\n    height: 70%;\r\n  }\r\n`;\r\n","import AvatarPlaceholder from \"../../assets/icons/profile.svg\";\r\nimport { AvatarWrapper } from \"./styles\";\r\n\r\nexport const Avatar = () => {\r\n  return (\r\n    <AvatarWrapper>\r\n      <img src={AvatarPlaceholder} alt=\"user avatar\" />\r\n    </AvatarWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { secondary, secondary1, secondary3 } from \"../../styles/colors\";\r\n\r\nexport const ContactWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${secondary};\r\n  width: 100%;\r\n  padding: 0px 14px 0px 14px;\r\n  height: 100px;\r\n  border-radius: 12px;\r\n  margin-bottom: 8px;\r\n  &:active {\r\n    background-color: ${secondary1};\r\n    transition: 0.5s;\r\n  }\r\n`;\r\n\r\nexport const CheckBox = styled.input`\r\n  padding: 5px;\r\n`;\r\n\r\nexport const ContactDetails = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const CheckBoxWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const DetailsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: 15px;\r\n  font-size: 18px;\r\n  font-family: \"Montserrat\", sans-serif;\r\n\r\n  & > *:first-child {\r\n    font-size: 26px;\r\n    color: ${secondary3};\r\n  }\r\n\r\n  & > *:nth-child(2) {\r\n    font-size: 16px;\r\n    color: #000000;\r\n  }\r\n`;\r\n\r\nexport const PhoneWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-content: center;\r\n  & > img {\r\n    display: flex;\r\n    height: 20px;\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/phone.4e98b9a3.svg\";","import { Avatar } from \"../avatar\";\r\nimport {\r\n  ContactWrapper,\r\n  CheckBox,\r\n  ContactDetails,\r\n  CheckBoxWrapper,\r\n  DetailsWrapper,\r\n  PhoneWrapper,\r\n} from \"./styles\";\r\nimport PhoneIcon from \"../../assets/icons/phone.svg\";\r\n\r\nexport const Contact = ({ id, name, phone, isChecked, onClick }) => {\r\n  const _onClick = () => {\r\n    onClick && onClick(id);\r\n  };\r\n\r\n  return (\r\n    <ContactWrapper onClick={_onClick}>\r\n      <ContactDetails>\r\n        <Avatar />\r\n        <DetailsWrapper>\r\n          <div>{name}</div>\r\n          <PhoneWrapper>\r\n            <img src={PhoneIcon} alt=\"phone icon\" />\r\n            <div>{phone}</div>\r\n          </PhoneWrapper>\r\n        </DetailsWrapper>\r\n      </ContactDetails>\r\n      <CheckBoxWrapper>\r\n        <CheckBox type=\"checkbox\" checked={isChecked} readOnly />\r\n      </CheckBoxWrapper>\r\n    </ContactWrapper>\r\n  );\r\n};\r\n","import BarLoader from \"react-spinners/BarLoader\";\r\n\r\nexport const Loader = (props) => {\r\n  return <BarLoader color={\"#f41f28\"} loading={true} />;\r\n};\r\n","import { ContactListWrapper, LoaderWrapper } from \"./styles\";\r\nimport { Contact } from \"../contact/index\";\r\nimport { Loader } from \"../loader\";\r\nimport { toggleSelectedId } from \"./utils/toggleSelectedId\";\r\nexport const ContactList = ({\r\n  activeContacts,\r\n  setActiveContacts,\r\n  contacts,\r\n}) => {\r\n  const loading = contacts === undefined;\r\n\r\n  const checkIsSelected = (id, array) => {\r\n    return array.includes(id);\r\n  };\r\n\r\n  const onClick = (id) => {\r\n    const newActiveContacts = toggleSelectedId(activeContacts, id);\r\n    setActiveContacts(newActiveContacts);\r\n    console.log(newActiveContacts);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <LoaderWrapper>\r\n          <Loader />\r\n        </LoaderWrapper>\r\n      )}\r\n      {!loading && (\r\n        <ContactListWrapper>\r\n          {contacts.map((item) => (\r\n            <Contact\r\n              key={item.id}\r\n              id={item.id}\r\n              name={item.name}\r\n              phone={item.phone}\r\n              activeContacts={activeContacts}\r\n              setActiveContacts={setActiveContacts}\r\n              isChecked={checkIsSelected(item.id, activeContacts)}\r\n              onClick={onClick}\r\n            />\r\n          ))}\r\n        </ContactListWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const toggleSelectedId = (arr, id) => {\r\n  const result = [...arr];\r\n  if (result.includes(id)) {\r\n    result.splice(result.indexOf(id), 1);\r\n    return result;\r\n  }\r\n  result.push(id);\r\n  return result;\r\n};\r\n","export const fetchUsers = async () => {\r\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n  const users = await response.json();\r\n  return users;\r\n};\r\n","export const sortContactsByName = (arr) => {\r\n  const result = [...arr];\r\n  result.sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0));\r\n  return result;\r\n};\r\n","import { Header } from \"../../components/header/index\";\r\nimport { SearchBar } from \"../../components/searchBar/index\";\r\nimport { ContactList } from \"../../components/contactList/index\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { fetchUsers } from \"./utils/fetchUsers\";\r\nimport { sortContactsByName } from \"./utils/sortContactsByName\";\r\nimport { isContactSearchMatch } from \"./utils/isContactSearchMatch\";\r\n\r\nexport const ContactsPage = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [activeContacts, setActiveContacts] = useState([]);\r\n  const [contacts, setContacts] = useState(undefined);\r\n  const [filteredContacts, setFilteredContacts] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const users = await fetchUsers();\r\n      const sortedUsers = sortContactsByName(users);\r\n      setContacts(sortedUsers);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (contacts === undefined) {\r\n      return;\r\n    }\r\n\r\n    setFilteredContacts(\r\n      contacts.filter((item) => isContactSearchMatch(item, inputValue))\r\n    );\r\n  }, [contacts, inputValue]);\r\n  return (\r\n    <>\r\n      <Header>\r\n        Contacts\r\n        <SearchBar inputValue={inputValue} setInputValue={setInputValue} />\r\n      </Header>\r\n      <ContactList\r\n        contacts={filteredContacts}\r\n        inputValue={inputValue}\r\n        setInputValue={setInputValue}\r\n        activeContacts={activeContacts}\r\n        setActiveContacts={setActiveContacts}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","export const isContactSearchMatch = (contact, searchText) => {\r\n  if (searchText === \"\") {\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    contact.name.toLowerCase().includes(searchText.toLowerCase()) ||\r\n    contact.phone.includes(searchText)\r\n  );\r\n};\r\n","import { ContactsPage } from \"./pages/contactsPage/index\";\n\nfunction App() {\n  return <ContactsPage />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}